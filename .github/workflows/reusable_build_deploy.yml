name: Reusable Build and Deploy

on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        type: string
        description: "The name of the image"
        required: true
      DOCKERFILE:
        type: string
        description: "Path to the Dockerfile"
        required: true
      BUILD_CONTEXT:
        type: string
        description: "The build context for Docker"
        required: true
      BUILD_ARGS:
        type: string
        description: "The build arguments for Docker"
        required: false
        default: ""
      REGISTRY_PREFIX:
        type: string
        description: "The registry prefix"
        required: false
        default: "eduvize"
      DOMAIN_NAME:
        type: string
        description: "The domain name for ingress"
        required: false
        default: "eduvize.dev"
      RELEASE_NAMESPACE:
        type: string
        description: "The Kubernetes namespace for release"
        required: false
        default: "eduvize"
      ENVIRONMENT_FILE_PATH:
        type: string
        description: "Path to the environment file"
        required: false
        default: ""
    secrets:
      REGISTRY_NAME:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
      KUBECONFIG_DATA:
        required: true
      CLIENT_ENVIRONMENT:
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write Environment File
        if: ${{ inputs.ENVIRONMENT_FILE_PATH }}
        run: |
          echo "${{ secrets.CLIENT_ENVIRONMENT }}" > ${{ inputs.ENVIRONMENT_FILE_PATH }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Debug Docker Registry Info
        run: |
          echo "Registry Name: ${{ secrets.REGISTRY_NAME }}"

      - name: Log in to Private Registry
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login "${{ secrets.REGISTRY_NAME }}" -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin

      - name: Build and Push Image
        run: |
          if [ -n "${{ inputs.REGISTRY_PREFIX }}" ]; then
            IMAGE_REPO="${{ inputs.REGISTRY_PREFIX }}/${{ inputs.IMAGE_NAME }}:latest"
          else
            IMAGE_REPO="${{ inputs.IMAGE_NAME }}:latest"
          fi
            
          # Build Args
          if [ -n "${{ inputs.BUILD_ARGS }}" ]; then
            BUILD_ARGS_STR="--build-arg ${{ inputs.BUILD_ARGS }}"
          else
            BUILD_ARGS_STR=""
          fi
            
          echo "Building ${{ secrets.REGISTRY_NAME }}/${IMAGE_REPO}"
          docker build $BUILD_ARGS_STR -f ${{ inputs.DOCKERFILE }} -t ${{ secrets.REGISTRY_NAME }}/${IMAGE_REPO} ${{ inputs.BUILD_CONTEXT }}
          docker push ${{ secrets.REGISTRY_NAME }}/${IMAGE_REPO}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Setup kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          kubectl config view

      - name: Helm Upgrade
        run: |
          helm upgrade --install eduvize kubernetes/eduvize \
            --values kubernetes/eduvize/values.yaml \
            --set ingress.hostname=${{ inputs.DOMAIN_NAME }} \
            --namespace ${{ inputs.RELEASE_NAMESPACE }} \
            --debug

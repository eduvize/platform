version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    env_file:
      - .env
    environment:
      - S3_ENDPOINT=http://s3:9000
      - POSTGRES_HOST=database
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REQUIRE_EMAIL_VALIDATION=false
      - PLAYGROUND_TOKEN_SECRET=devkey123
      - OVERRIDE_PLAYGROUND_SESSION_ID=fakeplaygroundsessionid
    depends_on:
      - database
      - redis
      - s3
      - kafka
    ports:
      - "8000:8000"
    networks:
      - app-tier

  course_generation_job:
    build:
      context: .
      dockerfile: jobs/Dockerfile
      args:
        JOB_NAME: course_generator
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=database
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_MAX_POLL_INTERVAL_SECONDS=1800 # 30 minutes
    depends_on:
      - kafka
      - database
    networks:
      - app-tier

  playground-controller:
    build:
      context: ../playground
      dockerfile: Dockerfile
    environment:
      - HOSTNAME=playground-controller
      - BACKEND_SOCKETIO_ENDPOINT=http://api:8000
      - JWT_SIGNING_KEY=devkey123
      - SESSION_ID=fakeplaygroundsessionid
      - PURGE_DATA_ON_DISCONNECT=true
      - ENABLE_SELF_DESTRUCT=false
    depends_on:
      - api
    networks:
      - app-tier
    volumes:
      - playground_shared:/userland
      - playground_hidden:/playground

  playground-environment:
    build:
      context: ../playground
      dockerfile: environment.Dockerfile
    depends_on:
      - api
      - playground-controller
    networks:
      - app-tier
    volumes:
      - playground_shared:/userland
      - playground_hidden:/playground

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - app-tier

  database:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=devpassword
      - POSTGRES_DB=eduvize
    volumes:
      - ./scripts/database/seed_dev_environment.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data

    networks:
      - app-tier

  s3:
    image: docker.io/bitnami/minio:2024
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - MINIO_DEFAULT_BUCKETS=eduvize:public
      - MINIO_REGION=us-east-1
    volumes:
      - s3_data:/data
    networks:
      - app-tier

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-tier

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  postgres_data:
  s3_data:
  playground_hidden:
  playground_shared:
